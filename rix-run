#!/usr/bin/env bash

echo "Checking nix requeriments..."
if ! command -v curl &> /dev/null
then
    echo "curl is required."
    exit 1
fi

echo "Install nix if not yet installed..."
if ! command -v nix-shell &> /dev/null
then
  curl --proto '=https' --tlsv1.2 -sSf \
    -L https://install.determinate.systems/nix | \
     sh -s -- install
fi


if test -f "${1}"; then
  echo "Generating default.nix configuration..."    
else
  echo "Error: No R script provided. Use: rix-run <your-script>.R"
  exit 2
fi

NIX_TMP_DIR=$(mktemp -d /tmp/rix.XXXXXXXXX)
RIX_R_SCRIPT_PATH="$(mktemp /tmp/rix.XXXXXXXXX.R)"
cat <<EOF > "$RIX_R_SCRIPT_PATH"
args <- commandArgs(trailingOnly=TRUE)
if (length(args) > 0) {
  file_lines <- readLines(args[1])

  r_ver <- grep("^#' @rix r_ver ", file_lines, value = TRUE)
  if (length(r_ver) == 1) {
    r_ver <- sub("^#' @rix ", "", r_ver)
    r_ver <- parse(text = r_ver)
  } else{
    r_ver = NULL
  }  
  r_pkgs <- grep("^#' @rix r_pkgs ", file_lines, value = TRUE)
  if (length(r_pkgs) == 1) {
    r_pkgs <- sub("^#' @rix ", "", r_pkgs)
    r_pkgs <- parse(text = r_pkgs)
  } else{
    r_pkgs = NULL
  }      
  system_pkgs <- grep("^#' @rix system_pkgs ", file_lines, value = TRUE)
  if (length(system_pkgs) == 1) {
    system_pkgs <- sub("^#' @rix ", "", system_pkgs)
    system_pkgs <- parse(text = system_pkgs)
  } else{
    system_pkgs = NULL
  }
  git_pkgs <- grep("^#' @rix git_pkgs ", file_lines, value = TRUE)
  if (length(git_pkgs) == 1) {
    git_pkgs <- sub("^#' @rix ", "", git_pkgs)
    git_pkgs <- parse(text = git_pkgs)
  } else{
    git_pkgs = NULL
  }
}
# sink("/dev/null")
suppressMessages(suppressWarnings({
  if(!requireNamespace("rix")) {
    install.packages("rix", repos = c(
      "https://ropensci.r-universe.dev",
      "https://cloud.r-project.org"
    ))
  }
  library(rix)
  path_default_nix <- "$NIX_TMP_DIR"
  rix::rix(
    eval(r_ver),
    eval(r_pkgs),
    eval(system_pkgs),
    eval(git_pkgs),
    overwrite = TRUE,
    print = TRUE,
    project_path = path_default_nix,
    ide = "other"
  )
}))
# sink()
cat(paste0("\n", path_default_nix, "/default.nix\n"))
EOF
NIX_TMP=$(mktemp /tmp/rix.XXXXXXXXX.tmp)
nix-shell --expr "$(curl -sl https://raw.githubusercontent.com/jrosell/rix-run/master/inst/extdata/rix.nix)" --run "Rscript --no-site-file --no-environ --no-restore $RIX_R_SCRIPT_PATH ${1}" > $NIX_TMP
# nix-shell --expr "$(cat inst/extdata/rix.nix)" --run "Rscript --no-site-file --no-environ --no-restore $RIX_R_SCRIPT_PATH ${1}" > $NIX_TMP
NIX_FILE=`cat $NIX_TMP | grep '^/tmp/' | grep 'default.nix'`
# cat $NIX_TMP
rm $RIX_R_SCRIPT_PATH

if [[ $(wc -l < "$NIX_FILE") -ge 2 ]]; then    
  echo "Runing nix-shell $NIX_FILE ${1}..."
  rm $NIX_TMP
else
  echo "Error when generating the configuration file. Check for errors on the $NIX_TMP file."
  exit 2
fi
nix-shell --expr "$(cat $NIX_FILE)" --run "Rscript  \
  --no-site-file \
  --no-environ \
  --no-restore \
  ${1}"
